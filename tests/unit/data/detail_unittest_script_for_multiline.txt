"""Python unittest script is generated by Regexapp Community Edition

Created by  : user1
Email       : user1@abcxyz.com
Company     : ABC XYZ LLC
Created date: _datetime_
"""

import unittest
import re

class TestDynamicGenTestScript(unittest.TestCase):
    def __init__(self, test_name='', test_data=None,
                 prepared_data=None, pattern=None):
        super().__init__(test_name)
        self.test_data = test_data
        self.prepared_data = prepared_data
        self.pattern = pattern

    def test_first_line_i_have_computer_other(self):
        result = re.search(self.pattern, self.test_data)
        self.assertIsNotNone(result)


def load_tests(loader, tests, pattern):
    test_cases = unittest.TestSuite()

    arguments = list()

    # test case #1 - test_first_line_i_have_computer_other
    arguments.append(
        (
            "test_first_line_i_have_computer_other",    # test name
            """First line
I have computer.
Other line
My friend has game console.
Another line ....
I don't have digital camera.
...
last line""",    # test data
            """I have words(var_v1).
My friend has words(var_v2).
I don't have words(var_v3).""",    # ref. user prepared data
            r"(?s)I +have +(?P<v1>\w+( +\w+)*)\.[^\r\n]*[\r\n]+([^\r\n]*[\r\n]+)*[^\r\n]*My +friend +has +(?P<v2>\w+( +\w+)*)\.[^\r\n]*[\r\n]+([^\r\n]*[\r\n]+)*[^\r\n]*I +don't +have +(?P<v3>\w+( +\w+)*)\."   # pattern
        )
    )

    for arg in arguments:
        test_name, test_data, prepared_data, pattern = arg
        testcase = TestDynamicGenTestScript(
            test_name=test_name,
            test_data=test_data,
            prepared_data=prepared_data,
            pattern=pattern
        )
        test_cases.addTest(testcase)
    return test_cases